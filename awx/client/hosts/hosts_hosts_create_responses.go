// Code generated by go-swagger; DO NOT EDIT.

package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// HostsHostsCreateReader is a Reader for the HostsHostsCreate structure.
type HostsHostsCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HostsHostsCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewHostsHostsCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewHostsHostsCreateCreated creates a HostsHostsCreateCreated with default headers values
func NewHostsHostsCreateCreated() *HostsHostsCreateCreated {
	return &HostsHostsCreateCreated{}
}

/*
HostsHostsCreateCreated describes a response with status code 201, with default header values.

HostsHostsCreateCreated hosts hosts create created
*/
type HostsHostsCreateCreated struct {
}

// IsSuccess returns true when this hosts hosts create created response has a 2xx status code
func (o *HostsHostsCreateCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this hosts hosts create created response has a 3xx status code
func (o *HostsHostsCreateCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this hosts hosts create created response has a 4xx status code
func (o *HostsHostsCreateCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this hosts hosts create created response has a 5xx status code
func (o *HostsHostsCreateCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this hosts hosts create created response a status code equal to that given
func (o *HostsHostsCreateCreated) IsCode(code int) bool {
	return code == 201
}

func (o *HostsHostsCreateCreated) Error() string {
	return fmt.Sprintf("[POST /api/v2/hosts/][%d] hostsHostsCreateCreated ", 201)
}

func (o *HostsHostsCreateCreated) String() string {
	return fmt.Sprintf("[POST /api/v2/hosts/][%d] hostsHostsCreateCreated ", 201)
}

func (o *HostsHostsCreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
HostsHostsCreateBody hosts hosts create body
swagger:model HostsHostsCreateBody
*/
type HostsHostsCreateBody struct {

	// description
	Description string `json:"description,omitempty"`

	// Is this host online and available for running jobs?
	Enabled bool `json:"enabled,omitempty"`

	// The value used by the remote inventory source to uniquely identify the host
	InstanceID string `json:"instance_id,omitempty"`

	// inventory
	// Required: true
	Inventory *int64 `json:"inventory"`

	// name
	// Required: true
	Name *string `json:"name"`

	// Host variables in JSON or YAML format.
	Variables string `json:"variables,omitempty"`
}

// Validate validates this hosts hosts create body
func (o *HostsHostsCreateBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateInventory(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *HostsHostsCreateBody) validateInventory(formats strfmt.Registry) error {

	if err := validate.Required("data"+"."+"inventory", "body", o.Inventory); err != nil {
		return err
	}

	return nil
}

func (o *HostsHostsCreateBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("data"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this hosts hosts create body based on context it is used
func (o *HostsHostsCreateBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *HostsHostsCreateBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *HostsHostsCreateBody) UnmarshalBinary(b []byte) error {
	var res HostsHostsCreateBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
