// Code generated by go-swagger; DO NOT EDIT.

package workflow_approvals

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// WorkflowApprovalsWorkflowApprovalsApproveCreateReader is a Reader for the WorkflowApprovalsWorkflowApprovalsApproveCreate structure.
type WorkflowApprovalsWorkflowApprovalsApproveCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *WorkflowApprovalsWorkflowApprovalsApproveCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewWorkflowApprovalsWorkflowApprovalsApproveCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewWorkflowApprovalsWorkflowApprovalsApproveCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewWorkflowApprovalsWorkflowApprovalsApproveCreateCreated creates a WorkflowApprovalsWorkflowApprovalsApproveCreateCreated with default headers values
func NewWorkflowApprovalsWorkflowApprovalsApproveCreateCreated() *WorkflowApprovalsWorkflowApprovalsApproveCreateCreated {
	return &WorkflowApprovalsWorkflowApprovalsApproveCreateCreated{}
}

/*
WorkflowApprovalsWorkflowApprovalsApproveCreateCreated describes a response with status code 201, with default header values.

WorkflowApprovalsWorkflowApprovalsApproveCreateCreated workflow approvals workflow approvals approve create created
*/
type WorkflowApprovalsWorkflowApprovalsApproveCreateCreated struct {
}

// IsSuccess returns true when this workflow approvals workflow approvals approve create created response has a 2xx status code
func (o *WorkflowApprovalsWorkflowApprovalsApproveCreateCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this workflow approvals workflow approvals approve create created response has a 3xx status code
func (o *WorkflowApprovalsWorkflowApprovalsApproveCreateCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this workflow approvals workflow approvals approve create created response has a 4xx status code
func (o *WorkflowApprovalsWorkflowApprovalsApproveCreateCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this workflow approvals workflow approvals approve create created response has a 5xx status code
func (o *WorkflowApprovalsWorkflowApprovalsApproveCreateCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this workflow approvals workflow approvals approve create created response a status code equal to that given
func (o *WorkflowApprovalsWorkflowApprovalsApproveCreateCreated) IsCode(code int) bool {
	return code == 201
}

func (o *WorkflowApprovalsWorkflowApprovalsApproveCreateCreated) Error() string {
	return fmt.Sprintf("[POST /api/v2/workflow_approvals/{id}/approve/][%d] workflowApprovalsWorkflowApprovalsApproveCreateCreated ", 201)
}

func (o *WorkflowApprovalsWorkflowApprovalsApproveCreateCreated) String() string {
	return fmt.Sprintf("[POST /api/v2/workflow_approvals/{id}/approve/][%d] workflowApprovalsWorkflowApprovalsApproveCreateCreated ", 201)
}

func (o *WorkflowApprovalsWorkflowApprovalsApproveCreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWorkflowApprovalsWorkflowApprovalsApproveCreateBadRequest creates a WorkflowApprovalsWorkflowApprovalsApproveCreateBadRequest with default headers values
func NewWorkflowApprovalsWorkflowApprovalsApproveCreateBadRequest() *WorkflowApprovalsWorkflowApprovalsApproveCreateBadRequest {
	return &WorkflowApprovalsWorkflowApprovalsApproveCreateBadRequest{}
}

/*
WorkflowApprovalsWorkflowApprovalsApproveCreateBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type WorkflowApprovalsWorkflowApprovalsApproveCreateBadRequest struct {
}

// IsSuccess returns true when this workflow approvals workflow approvals approve create bad request response has a 2xx status code
func (o *WorkflowApprovalsWorkflowApprovalsApproveCreateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this workflow approvals workflow approvals approve create bad request response has a 3xx status code
func (o *WorkflowApprovalsWorkflowApprovalsApproveCreateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this workflow approvals workflow approvals approve create bad request response has a 4xx status code
func (o *WorkflowApprovalsWorkflowApprovalsApproveCreateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this workflow approvals workflow approvals approve create bad request response has a 5xx status code
func (o *WorkflowApprovalsWorkflowApprovalsApproveCreateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this workflow approvals workflow approvals approve create bad request response a status code equal to that given
func (o *WorkflowApprovalsWorkflowApprovalsApproveCreateBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *WorkflowApprovalsWorkflowApprovalsApproveCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/workflow_approvals/{id}/approve/][%d] workflowApprovalsWorkflowApprovalsApproveCreateBadRequest ", 400)
}

func (o *WorkflowApprovalsWorkflowApprovalsApproveCreateBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v2/workflow_approvals/{id}/approve/][%d] workflowApprovalsWorkflowApprovalsApproveCreateBadRequest ", 400)
}

func (o *WorkflowApprovalsWorkflowApprovalsApproveCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
