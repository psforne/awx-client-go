// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GroupsGroupsUpdateReader is a Reader for the GroupsGroupsUpdate structure.
type GroupsGroupsUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GroupsGroupsUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGroupsGroupsUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGroupsGroupsUpdateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGroupsGroupsUpdateOK creates a GroupsGroupsUpdateOK with default headers values
func NewGroupsGroupsUpdateOK() *GroupsGroupsUpdateOK {
	return &GroupsGroupsUpdateOK{}
}

/*
GroupsGroupsUpdateOK describes a response with status code 200, with default header values.

GroupsGroupsUpdateOK groups groups update o k
*/
type GroupsGroupsUpdateOK struct {
}

// IsSuccess returns true when this groups groups update o k response has a 2xx status code
func (o *GroupsGroupsUpdateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this groups groups update o k response has a 3xx status code
func (o *GroupsGroupsUpdateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this groups groups update o k response has a 4xx status code
func (o *GroupsGroupsUpdateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this groups groups update o k response has a 5xx status code
func (o *GroupsGroupsUpdateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this groups groups update o k response a status code equal to that given
func (o *GroupsGroupsUpdateOK) IsCode(code int) bool {
	return code == 200
}

func (o *GroupsGroupsUpdateOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/groups/{id}/][%d] groupsGroupsUpdateOK ", 200)
}

func (o *GroupsGroupsUpdateOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/groups/{id}/][%d] groupsGroupsUpdateOK ", 200)
}

func (o *GroupsGroupsUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGroupsGroupsUpdateForbidden creates a GroupsGroupsUpdateForbidden with default headers values
func NewGroupsGroupsUpdateForbidden() *GroupsGroupsUpdateForbidden {
	return &GroupsGroupsUpdateForbidden{}
}

/*
GroupsGroupsUpdateForbidden describes a response with status code 403, with default header values.

forbidden
*/
type GroupsGroupsUpdateForbidden struct {
}

// IsSuccess returns true when this groups groups update forbidden response has a 2xx status code
func (o *GroupsGroupsUpdateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this groups groups update forbidden response has a 3xx status code
func (o *GroupsGroupsUpdateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this groups groups update forbidden response has a 4xx status code
func (o *GroupsGroupsUpdateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this groups groups update forbidden response has a 5xx status code
func (o *GroupsGroupsUpdateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this groups groups update forbidden response a status code equal to that given
func (o *GroupsGroupsUpdateForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GroupsGroupsUpdateForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/groups/{id}/][%d] groupsGroupsUpdateForbidden ", 403)
}

func (o *GroupsGroupsUpdateForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/groups/{id}/][%d] groupsGroupsUpdateForbidden ", 403)
}

func (o *GroupsGroupsUpdateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
