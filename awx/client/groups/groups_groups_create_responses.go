// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GroupsGroupsCreateReader is a Reader for the GroupsGroupsCreate structure.
type GroupsGroupsCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GroupsGroupsCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewGroupsGroupsCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGroupsGroupsCreateCreated creates a GroupsGroupsCreateCreated with default headers values
func NewGroupsGroupsCreateCreated() *GroupsGroupsCreateCreated {
	return &GroupsGroupsCreateCreated{}
}

/*
GroupsGroupsCreateCreated describes a response with status code 201, with default header values.

GroupsGroupsCreateCreated groups groups create created
*/
type GroupsGroupsCreateCreated struct {
}

// IsSuccess returns true when this groups groups create created response has a 2xx status code
func (o *GroupsGroupsCreateCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this groups groups create created response has a 3xx status code
func (o *GroupsGroupsCreateCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this groups groups create created response has a 4xx status code
func (o *GroupsGroupsCreateCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this groups groups create created response has a 5xx status code
func (o *GroupsGroupsCreateCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this groups groups create created response a status code equal to that given
func (o *GroupsGroupsCreateCreated) IsCode(code int) bool {
	return code == 201
}

func (o *GroupsGroupsCreateCreated) Error() string {
	return fmt.Sprintf("[POST /api/v2/groups/][%d] groupsGroupsCreateCreated ", 201)
}

func (o *GroupsGroupsCreateCreated) String() string {
	return fmt.Sprintf("[POST /api/v2/groups/][%d] groupsGroupsCreateCreated ", 201)
}

func (o *GroupsGroupsCreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
GroupsGroupsCreateBody groups groups create body
swagger:model GroupsGroupsCreateBody
*/
type GroupsGroupsCreateBody struct {

	// description
	Description string `json:"description,omitempty"`

	// inventory
	// Required: true
	Inventory *int64 `json:"inventory"`

	// name
	// Required: true
	Name *string `json:"name"`

	// Group variables in JSON or YAML format.
	Variables string `json:"variables,omitempty"`
}

// Validate validates this groups groups create body
func (o *GroupsGroupsCreateBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateInventory(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GroupsGroupsCreateBody) validateInventory(formats strfmt.Registry) error {

	if err := validate.Required("data"+"."+"inventory", "body", o.Inventory); err != nil {
		return err
	}

	return nil
}

func (o *GroupsGroupsCreateBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("data"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this groups groups create body based on context it is used
func (o *GroupsGroupsCreateBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GroupsGroupsCreateBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GroupsGroupsCreateBody) UnmarshalBinary(b []byte) error {
	var res GroupsGroupsCreateBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
