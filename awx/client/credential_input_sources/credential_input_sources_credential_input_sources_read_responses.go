// Code generated by go-swagger; DO NOT EDIT.

package credential_input_sources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CredentialInputSourcesCredentialInputSourcesReadReader is a Reader for the CredentialInputSourcesCredentialInputSourcesRead structure.
type CredentialInputSourcesCredentialInputSourcesReadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CredentialInputSourcesCredentialInputSourcesReadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCredentialInputSourcesCredentialInputSourcesReadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewCredentialInputSourcesCredentialInputSourcesReadForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCredentialInputSourcesCredentialInputSourcesReadOK creates a CredentialInputSourcesCredentialInputSourcesReadOK with default headers values
func NewCredentialInputSourcesCredentialInputSourcesReadOK() *CredentialInputSourcesCredentialInputSourcesReadOK {
	return &CredentialInputSourcesCredentialInputSourcesReadOK{}
}

/*
CredentialInputSourcesCredentialInputSourcesReadOK describes a response with status code 200, with default header values.

CredentialInputSourcesCredentialInputSourcesReadOK credential input sources credential input sources read o k
*/
type CredentialInputSourcesCredentialInputSourcesReadOK struct {
}

// IsSuccess returns true when this credential input sources credential input sources read o k response has a 2xx status code
func (o *CredentialInputSourcesCredentialInputSourcesReadOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this credential input sources credential input sources read o k response has a 3xx status code
func (o *CredentialInputSourcesCredentialInputSourcesReadOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this credential input sources credential input sources read o k response has a 4xx status code
func (o *CredentialInputSourcesCredentialInputSourcesReadOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this credential input sources credential input sources read o k response has a 5xx status code
func (o *CredentialInputSourcesCredentialInputSourcesReadOK) IsServerError() bool {
	return false
}

// IsCode returns true when this credential input sources credential input sources read o k response a status code equal to that given
func (o *CredentialInputSourcesCredentialInputSourcesReadOK) IsCode(code int) bool {
	return code == 200
}

func (o *CredentialInputSourcesCredentialInputSourcesReadOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/credential_input_sources/{id}/][%d] credentialInputSourcesCredentialInputSourcesReadOK ", 200)
}

func (o *CredentialInputSourcesCredentialInputSourcesReadOK) String() string {
	return fmt.Sprintf("[GET /api/v2/credential_input_sources/{id}/][%d] credentialInputSourcesCredentialInputSourcesReadOK ", 200)
}

func (o *CredentialInputSourcesCredentialInputSourcesReadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCredentialInputSourcesCredentialInputSourcesReadForbidden creates a CredentialInputSourcesCredentialInputSourcesReadForbidden with default headers values
func NewCredentialInputSourcesCredentialInputSourcesReadForbidden() *CredentialInputSourcesCredentialInputSourcesReadForbidden {
	return &CredentialInputSourcesCredentialInputSourcesReadForbidden{}
}

/*
CredentialInputSourcesCredentialInputSourcesReadForbidden describes a response with status code 403, with default header values.

forbidden
*/
type CredentialInputSourcesCredentialInputSourcesReadForbidden struct {
}

// IsSuccess returns true when this credential input sources credential input sources read forbidden response has a 2xx status code
func (o *CredentialInputSourcesCredentialInputSourcesReadForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this credential input sources credential input sources read forbidden response has a 3xx status code
func (o *CredentialInputSourcesCredentialInputSourcesReadForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this credential input sources credential input sources read forbidden response has a 4xx status code
func (o *CredentialInputSourcesCredentialInputSourcesReadForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this credential input sources credential input sources read forbidden response has a 5xx status code
func (o *CredentialInputSourcesCredentialInputSourcesReadForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this credential input sources credential input sources read forbidden response a status code equal to that given
func (o *CredentialInputSourcesCredentialInputSourcesReadForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CredentialInputSourcesCredentialInputSourcesReadForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/credential_input_sources/{id}/][%d] credentialInputSourcesCredentialInputSourcesReadForbidden ", 403)
}

func (o *CredentialInputSourcesCredentialInputSourcesReadForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/credential_input_sources/{id}/][%d] credentialInputSourcesCredentialInputSourcesReadForbidden ", 403)
}

func (o *CredentialInputSourcesCredentialInputSourcesReadForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
