// Code generated by go-swagger; DO NOT EDIT.

package instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new instances API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for instances API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	InstancesInstancesHealthCheckCreate(params *InstancesInstancesHealthCheckCreateParams, opts ...ClientOption) (*InstancesInstancesHealthCheckCreateOK, *InstancesInstancesHealthCheckCreateCreated, error)

	InstancesInstancesHealthCheckList(params *InstancesInstancesHealthCheckListParams, opts ...ClientOption) (*InstancesInstancesHealthCheckListOK, error)

	InstancesInstancesInstanceGroupsCreate(params *InstancesInstancesInstanceGroupsCreateParams, opts ...ClientOption) (*InstancesInstancesInstanceGroupsCreateCreated, error)

	InstancesInstancesInstanceGroupsList(params *InstancesInstancesInstanceGroupsListParams, opts ...ClientOption) (*InstancesInstancesInstanceGroupsListOK, error)

	InstancesInstancesJobsList(params *InstancesInstancesJobsListParams, opts ...ClientOption) (*InstancesInstancesJobsListOK, error)

	InstancesInstancesList(params *InstancesInstancesListParams, opts ...ClientOption) (*InstancesInstancesListOK, error)

	InstancesInstancesPartialUpdate(params *InstancesInstancesPartialUpdateParams, opts ...ClientOption) (*InstancesInstancesPartialUpdateOK, error)

	InstancesInstancesRead(params *InstancesInstancesReadParams, opts ...ClientOption) (*InstancesInstancesReadOK, error)

	InstancesInstancesUpdate(params *InstancesInstancesUpdateParams, opts ...ClientOption) (*InstancesInstancesUpdateOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
	InstancesInstancesHealthCheckCreate manuallies initiate a health check

	For purposes of error remediation or debugging, a health check can be

manually initiated by making a POST request to this endpoint.

This will submit the work unit to the target node through the receptor mesh and wait for it to finish.
The model will be updated with the result.
Up-to-date values of the fields will be returned in the response data.
*/
func (a *Client) InstancesInstancesHealthCheckCreate(params *InstancesInstancesHealthCheckCreateParams, opts ...ClientOption) (*InstancesInstancesHealthCheckCreateOK, *InstancesInstancesHealthCheckCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInstancesInstancesHealthCheckCreateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Instances_instances_health_check_create",
		Method:             "POST",
		PathPattern:        "/api/v2/instances/{id}/health_check/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InstancesInstancesHealthCheckCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *InstancesInstancesHealthCheckCreateOK:
		return value, nil, nil
	case *InstancesInstancesHealthCheckCreateCreated:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for instances: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	InstancesInstancesHealthCheckList healths check data

Health checks are used to obtain important data about an instance.
Instance fields affected by the health check are shown in this view.
Fundamentally, health checks require running code on the machine in question.

  - For instances with `node_type` of "control" or "hybrid", health checks are

performed as part of a periodic task that runs in the background.
  - For instances with `node_type` of "execution", health checks are done by submitting

a work unit through the receptor mesh.

If ran through the receptor mesh, the invoked command is:

```
ansible-runner worker --worker-info
```

For execution nodes, these checks are _not_ performed on a regular basis.
Health checks against functional nodes will be ran when the node is first discovered.
Health checks against nodes with errors will be repeated at a reduced frequency.
*/
func (a *Client) InstancesInstancesHealthCheckList(params *InstancesInstancesHealthCheckListParams, opts ...ClientOption) (*InstancesInstancesHealthCheckListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInstancesInstancesHealthCheckListParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Instances_instances_health_check_list",
		Method:             "GET",
		PathPattern:        "/api/v2/instances/{id}/health_check/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InstancesInstancesHealthCheckListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InstancesInstancesHealthCheckListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Instances_instances_health_check_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	InstancesInstancesInstanceGroupsCreate creates an instance group for an instance

Make a POST request to this resource with the following instance group
fields to create a new instance group associated with this
instance.

* `name`: Name of this instance group. (string, required)

* `is_container_group`: Indicates whether instances in this group are containerized.Containerized groups have a designated Openshift or Kubernetes cluster. (boolean, default=“)
* `credential`:  (id, default=“)
* `policy_instance_percentage`: Minimum percentage of all instances that will be automatically assigned to this group when new instances come online. (integer, default=`0`)
* `policy_instance_minimum`: Static minimum number of Instances that will be automatically assign to this group when new instances come online. (integer, default=`0`)
* `policy_instance_list`: List of exact-match Instances that will be assigned to this group (json, default=“)
* `pod_spec_override`:  (string, default=`""`)

# Add Instance Groups for an Instance:

Make a POST request to this resource with only an `id` field to associate an
existing instance group with this instance.

# Remove Instance Groups from this Instance:

Make a POST request to this resource with `id` and `disassociate` fields to
remove the instance group from this instance

	without deleting the instance group.
*/
func (a *Client) InstancesInstancesInstanceGroupsCreate(params *InstancesInstancesInstanceGroupsCreateParams, opts ...ClientOption) (*InstancesInstancesInstanceGroupsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInstancesInstancesInstanceGroupsCreateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Instances_instances_instance_groups_create",
		Method:             "POST",
		PathPattern:        "/api/v2/instances/{id}/instance_groups/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InstancesInstancesInstanceGroupsCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InstancesInstancesInstanceGroupsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Instances_instances_instance_groups_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	InstancesInstancesInstanceGroupsList lists instance groups for an instance

Make a GET request to this resource to retrieve a list of
instance groups associated with the selected
instance.

The resulting data structure contains:

	{
	    "count": 99,
	    "next": null,
	    "previous": null,
	    "results": [
	        ...
	    ]
	}

The `count` field indicates the total number of instance groups
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more instance group records.

## Results

Each instance group data structure includes the following fields:

* `id`: Database ID for this instance group. (integer)
* `type`: Data type for this instance group. (choice)
* `url`: URL for this instance group. (string)
* `related`: Data structure with URLs of related resources. (object)
* `name`: Name of this instance group. (string)
* `created`: Timestamp when this instance group was created. (datetime)
* `modified`: Timestamp when this instance group was last modified. (datetime)
* `capacity`:  (field)
* `committed_capacity`:  (field)
* `consumed_capacity`:  (field)
* `percent_capacity_remaining`:  (field)
* `jobs_running`: Count of jobs in the running or waiting state that are targeted for this instance group (integer)
* `jobs_total`: Count of all jobs that target this instance group (integer)
* `instances`:  (field)
* `is_container_group`: Indicates whether instances in this group are containerized.Containerized groups have a designated Openshift or Kubernetes cluster. (boolean)
* `credential`:  (id)
* `policy_instance_percentage`: Minimum percentage of all instances that will be automatically assigned to this group when new instances come online. (integer)
* `policy_instance_minimum`: Static minimum number of Instances that will be automatically assign to this group when new instances come online. (integer)
* `policy_instance_list`: List of exact-match Instances that will be assigned to this group (json)
* `pod_spec_override`:  (string)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)

## Sorting

To specify that instance groups are returned in a particular
order, use the `order_by` query string parameter on the GET request.

	?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

	?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

	?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

	?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

	?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

	?related__search=findme
*/
func (a *Client) InstancesInstancesInstanceGroupsList(params *InstancesInstancesInstanceGroupsListParams, opts ...ClientOption) (*InstancesInstancesInstanceGroupsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInstancesInstancesInstanceGroupsListParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Instances_instances_instance_groups_list",
		Method:             "GET",
		PathPattern:        "/api/v2/instances/{id}/instance_groups/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InstancesInstancesInstanceGroupsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InstancesInstancesInstanceGroupsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Instances_instances_instance_groups_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	InstancesInstancesJobsList lists unified jobs for an instance

Make a GET request to this resource to retrieve a list of
unified jobs associated with the selected
instance.

The resulting data structure contains:

	{
	    "count": 99,
	    "next": null,
	    "previous": null,
	    "results": [
	        ...
	    ]
	}

The `count` field indicates the total number of unified jobs
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more unified job records.

## Results

Each unified job data structure includes the following fields:

* `id`: Database ID for this unified job. (integer)
* `type`: Data type for this unified job. (choice)
* `url`: URL for this unified job. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this unified job was created. (datetime)
* `modified`: Timestamp when this unified job was last modified. (datetime)
* `name`: Name of this unified job. (string)
* `description`: Optional description of this unified job. (string)
* `unified_job_template`:  (id)
* `launch_type`:  (choice)
  - `manual`: Manual
  - `relaunch`: Relaunch
  - `callback`: Callback
  - `scheduled`: Scheduled
  - `dependency`: Dependency
  - `workflow`: Workflow
  - `webhook`: Webhook
  - `sync`: Sync
  - `scm`: SCM Update

* `status`:  (choice)
  - `new`: New
  - `pending`: Pending
  - `waiting`: Waiting
  - `running`: Running
  - `successful`: Successful
  - `failed`: Failed
  - `error`: Error
  - `canceled`: Canceled

* `execution_environment`: The container image to be used for execution. (id)
* `failed`:  (boolean)
* `started`: The date and time the job was queued for starting. (datetime)
* `finished`: The date and time the job finished execution. (datetime)
* `canceled_on`: The date and time when the cancel request was sent. (datetime)
* `elapsed`: Elapsed time in seconds that the job ran. (decimal)
* `job_explanation`: A status field to indicate the state of the job if it wasn&#39;t able to run and capture stdout (string)
* `execution_node`: The node the job executed on. (string)
* `controller_node`: The instance that managed the execution environment. (string)
* `launched_by`:  (field)
* `work_unit_id`: The Receptor work unit ID associated with this job. (string)

## Sorting

To specify that unified jobs are returned in a particular
order, use the `order_by` query string parameter on the GET request.

	?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

	?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

	?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

	?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

	?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

	?related__search=findme
*/
func (a *Client) InstancesInstancesJobsList(params *InstancesInstancesJobsListParams, opts ...ClientOption) (*InstancesInstancesJobsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInstancesInstancesJobsListParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Instances_instances_jobs_list",
		Method:             "GET",
		PathPattern:        "/api/v2/instances/{id}/jobs/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InstancesInstancesJobsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InstancesInstancesJobsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Instances_instances_jobs_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	InstancesInstancesList lists instances

Make a GET request to this resource to retrieve the list of
instances.

The resulting data structure contains:

	{
	    "count": 99,
	    "next": null,
	    "previous": null,
	    "results": [
	        ...
	    ]
	}

The `count` field indicates the total number of instances
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more instance records.

## Results

Each instance data structure includes the following fields:

* `id`: Database ID for this instance. (integer)
* `type`: Data type for this instance. (choice)
* `url`: URL for this instance. (string)
* `related`: Data structure with URLs of related resources. (object)
* `uuid`:  (string)
* `hostname`:  (string)
* `created`: Timestamp when this instance was created. (datetime)
* `modified`: Timestamp when this instance was last modified. (datetime)
* `last_seen`: Last time instance ran its heartbeat task for main cluster nodes. Last known connection to receptor mesh for execution nodes. (datetime)
* `last_health_check`: Last time a health check was ran on this instance to refresh cpu, memory, and capacity. (datetime)
* `errors`: Any error details from the last health check. (string)
* `capacity_adjustment`:  (decimal)
* `version`:  (string)
* `capacity`:  (integer)
* `consumed_capacity`:  (field)
* `percent_capacity_remaining`:  (field)
* `jobs_running`: Count of jobs in the running or waiting state that are targeted for this instance (integer)
* `jobs_total`: Count of all jobs that target this instance (integer)
* `cpu`:  (integer)
* `memory`: Total system memory of this instance in bytes. (integer)
* `cpu_capacity`:  (integer)
* `mem_capacity`:  (integer)
* `enabled`:  (boolean)
* `managed_by_policy`:  (boolean)
* `node_type`:  (choice)
  - `control`: Control plane node
  - `execution`: Execution plane node
  - `hybrid`: Controller and execution

## Sorting

To specify that instances are returned in a particular
order, use the `order_by` query string parameter on the GET request.

	?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

	?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

	?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

	?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

	?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

	?related__search=findme
*/
func (a *Client) InstancesInstancesList(params *InstancesInstancesListParams, opts ...ClientOption) (*InstancesInstancesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInstancesInstancesListParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Instances_instances_list",
		Method:             "GET",
		PathPattern:        "/api/v2/instances/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InstancesInstancesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InstancesInstancesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Instances_instances_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	InstancesInstancesPartialUpdate updates an instance

Make a PUT or PATCH request to this resource to update this
instance.  The following fields may be modified:

* `capacity_adjustment`:  (decimal, default=`1`)

* `enabled`:  (boolean, default=`True`)
* `managed_by_policy`:  (boolean, default=`True`)

For a PATCH request, include only the fields that are being modified.
*/
func (a *Client) InstancesInstancesPartialUpdate(params *InstancesInstancesPartialUpdateParams, opts ...ClientOption) (*InstancesInstancesPartialUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInstancesInstancesPartialUpdateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Instances_instances_partial_update",
		Method:             "PATCH",
		PathPattern:        "/api/v2/instances/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InstancesInstancesPartialUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InstancesInstancesPartialUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Instances_instances_partial_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	InstancesInstancesRead retrieves an instance

Make GET request to this resource to retrieve a single instance
record containing the following fields:

* `id`: Database ID for this instance. (integer)
* `type`: Data type for this instance. (choice)
* `url`: URL for this instance. (string)
* `related`: Data structure with URLs of related resources. (object)
* `uuid`:  (string)
* `hostname`:  (string)
* `created`: Timestamp when this instance was created. (datetime)
* `modified`: Timestamp when this instance was last modified. (datetime)
* `last_seen`: Last time instance ran its heartbeat task for main cluster nodes. Last known connection to receptor mesh for execution nodes. (datetime)
* `last_health_check`: Last time a health check was ran on this instance to refresh cpu, memory, and capacity. (datetime)
* `errors`: Any error details from the last health check. (string)
* `capacity_adjustment`:  (decimal)
* `version`:  (string)
* `capacity`:  (integer)
* `consumed_capacity`:  (field)
* `percent_capacity_remaining`:  (field)
* `jobs_running`: Count of jobs in the running or waiting state that are targeted for this instance (integer)
* `jobs_total`: Count of all jobs that target this instance (integer)
* `cpu`:  (integer)
* `memory`: Total system memory of this instance in bytes. (integer)
* `cpu_capacity`:  (integer)
* `mem_capacity`:  (integer)
* `enabled`:  (boolean)
* `managed_by_policy`:  (boolean)
* `node_type`:  (choice)
  - `control`: Control plane node
  - `execution`: Execution plane node
  - `hybrid`: Controller and execution
*/
func (a *Client) InstancesInstancesRead(params *InstancesInstancesReadParams, opts ...ClientOption) (*InstancesInstancesReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInstancesInstancesReadParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Instances_instances_read",
		Method:             "GET",
		PathPattern:        "/api/v2/instances/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InstancesInstancesReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InstancesInstancesReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Instances_instances_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	InstancesInstancesUpdate updates an instance

Make a PUT or PATCH request to this resource to update this
instance.  The following fields may be modified:

* `capacity_adjustment`:  (decimal, default=`1`)

* `enabled`:  (boolean, default=`True`)
* `managed_by_policy`:  (boolean, default=`True`)

For a PUT request, include **all** fields in the request.
*/
func (a *Client) InstancesInstancesUpdate(params *InstancesInstancesUpdateParams, opts ...ClientOption) (*InstancesInstancesUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInstancesInstancesUpdateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Instances_instances_update",
		Method:             "PUT",
		PathPattern:        "/api/v2/instances/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InstancesInstancesUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InstancesInstancesUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Instances_instances_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
