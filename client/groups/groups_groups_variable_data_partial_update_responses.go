// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GroupsGroupsVariableDataPartialUpdateReader is a Reader for the GroupsGroupsVariableDataPartialUpdate structure.
type GroupsGroupsVariableDataPartialUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GroupsGroupsVariableDataPartialUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGroupsGroupsVariableDataPartialUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGroupsGroupsVariableDataPartialUpdateOK creates a GroupsGroupsVariableDataPartialUpdateOK with default headers values
func NewGroupsGroupsVariableDataPartialUpdateOK() *GroupsGroupsVariableDataPartialUpdateOK {
	return &GroupsGroupsVariableDataPartialUpdateOK{}
}

/*
GroupsGroupsVariableDataPartialUpdateOK describes a response with status code 200, with default header values.

GroupsGroupsVariableDataPartialUpdateOK groups groups variable data partial update o k
*/
type GroupsGroupsVariableDataPartialUpdateOK struct {
}

// IsSuccess returns true when this groups groups variable data partial update o k response has a 2xx status code
func (o *GroupsGroupsVariableDataPartialUpdateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this groups groups variable data partial update o k response has a 3xx status code
func (o *GroupsGroupsVariableDataPartialUpdateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this groups groups variable data partial update o k response has a 4xx status code
func (o *GroupsGroupsVariableDataPartialUpdateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this groups groups variable data partial update o k response has a 5xx status code
func (o *GroupsGroupsVariableDataPartialUpdateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this groups groups variable data partial update o k response a status code equal to that given
func (o *GroupsGroupsVariableDataPartialUpdateOK) IsCode(code int) bool {
	return code == 200
}

func (o *GroupsGroupsVariableDataPartialUpdateOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/groups/{id}/variable_data/][%d] groupsGroupsVariableDataPartialUpdateOK ", 200)
}

func (o *GroupsGroupsVariableDataPartialUpdateOK) String() string {
	return fmt.Sprintf("[PATCH /api/v2/groups/{id}/variable_data/][%d] groupsGroupsVariableDataPartialUpdateOK ", 200)
}

func (o *GroupsGroupsVariableDataPartialUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
GroupsGroupsVariableDataPartialUpdateBody groups groups variable data partial update body
swagger:model GroupsGroupsVariableDataPartialUpdateBody
*/
type GroupsGroupsVariableDataPartialUpdateBody struct {

	// Group variables in JSON or YAML format.
	Variables string `json:"variables,omitempty"`
}

// Validate validates this groups groups variable data partial update body
func (o *GroupsGroupsVariableDataPartialUpdateBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this groups groups variable data partial update body based on context it is used
func (o *GroupsGroupsVariableDataPartialUpdateBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GroupsGroupsVariableDataPartialUpdateBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GroupsGroupsVariableDataPartialUpdateBody) UnmarshalBinary(b []byte) error {
	var res GroupsGroupsVariableDataPartialUpdateBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
