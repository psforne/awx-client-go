// Code generated by go-swagger; DO NOT EDIT.

package project_updates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ProjectUpdatesProjectUpdatesDeleteReader is a Reader for the ProjectUpdatesProjectUpdatesDelete structure.
type ProjectUpdatesProjectUpdatesDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectUpdatesProjectUpdatesDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewProjectUpdatesProjectUpdatesDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewProjectUpdatesProjectUpdatesDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProjectUpdatesProjectUpdatesDeleteNoContent creates a ProjectUpdatesProjectUpdatesDeleteNoContent with default headers values
func NewProjectUpdatesProjectUpdatesDeleteNoContent() *ProjectUpdatesProjectUpdatesDeleteNoContent {
	return &ProjectUpdatesProjectUpdatesDeleteNoContent{}
}

/*
ProjectUpdatesProjectUpdatesDeleteNoContent describes a response with status code 204, with default header values.

ProjectUpdatesProjectUpdatesDeleteNoContent project updates project updates delete no content
*/
type ProjectUpdatesProjectUpdatesDeleteNoContent struct {
}

// IsSuccess returns true when this project updates project updates delete no content response has a 2xx status code
func (o *ProjectUpdatesProjectUpdatesDeleteNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this project updates project updates delete no content response has a 3xx status code
func (o *ProjectUpdatesProjectUpdatesDeleteNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project updates project updates delete no content response has a 4xx status code
func (o *ProjectUpdatesProjectUpdatesDeleteNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this project updates project updates delete no content response has a 5xx status code
func (o *ProjectUpdatesProjectUpdatesDeleteNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this project updates project updates delete no content response a status code equal to that given
func (o *ProjectUpdatesProjectUpdatesDeleteNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *ProjectUpdatesProjectUpdatesDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/project_updates/{id}/][%d] projectUpdatesProjectUpdatesDeleteNoContent ", 204)
}

func (o *ProjectUpdatesProjectUpdatesDeleteNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v2/project_updates/{id}/][%d] projectUpdatesProjectUpdatesDeleteNoContent ", 204)
}

func (o *ProjectUpdatesProjectUpdatesDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewProjectUpdatesProjectUpdatesDeleteForbidden creates a ProjectUpdatesProjectUpdatesDeleteForbidden with default headers values
func NewProjectUpdatesProjectUpdatesDeleteForbidden() *ProjectUpdatesProjectUpdatesDeleteForbidden {
	return &ProjectUpdatesProjectUpdatesDeleteForbidden{}
}

/*
ProjectUpdatesProjectUpdatesDeleteForbidden describes a response with status code 403, with default header values.

forbidden
*/
type ProjectUpdatesProjectUpdatesDeleteForbidden struct {
}

// IsSuccess returns true when this project updates project updates delete forbidden response has a 2xx status code
func (o *ProjectUpdatesProjectUpdatesDeleteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project updates project updates delete forbidden response has a 3xx status code
func (o *ProjectUpdatesProjectUpdatesDeleteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project updates project updates delete forbidden response has a 4xx status code
func (o *ProjectUpdatesProjectUpdatesDeleteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this project updates project updates delete forbidden response has a 5xx status code
func (o *ProjectUpdatesProjectUpdatesDeleteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this project updates project updates delete forbidden response a status code equal to that given
func (o *ProjectUpdatesProjectUpdatesDeleteForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ProjectUpdatesProjectUpdatesDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/project_updates/{id}/][%d] projectUpdatesProjectUpdatesDeleteForbidden ", 403)
}

func (o *ProjectUpdatesProjectUpdatesDeleteForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/project_updates/{id}/][%d] projectUpdatesProjectUpdatesDeleteForbidden ", 403)
}

func (o *ProjectUpdatesProjectUpdatesDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
